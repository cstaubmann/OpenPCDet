2022-06-20 03:02:27,104   INFO  **********************Start logging**********************
2022-06-20 03:02:27,104   INFO  CUDA_VISIBLE_DEVICES=ALL
2022-06-20 03:02:27,104   INFO  cfg_file         ./cfgs/once_models/sup_models/pointpillar.yaml
2022-06-20 03:02:27,104   INFO  batch_size       1
2022-06-20 03:02:27,104   INFO  epochs           80
2022-06-20 03:02:27,104   INFO  workers          4
2022-06-20 03:02:27,104   INFO  extra_tag        default
2022-06-20 03:02:27,104   INFO  ckpt             None
2022-06-20 03:02:27,104   INFO  pretrained_model ../output/cfgs/once_models/sup_models/pointpillar/default/ckpt/checkpoint_epoch_46.pth
2022-06-20 03:02:27,104   INFO  launcher         none
2022-06-20 03:02:27,104   INFO  tcp_port         18888
2022-06-20 03:02:27,104   INFO  sync_bn          False
2022-06-20 03:02:27,104   INFO  fix_random_seed  False
2022-06-20 03:02:27,104   INFO  ckpt_save_interval 1
2022-06-20 03:02:27,104   INFO  local_rank       0
2022-06-20 03:02:27,104   INFO  max_ckpt_save_num 30
2022-06-20 03:02:27,104   INFO  merge_all_iters_to_one_epoch False
2022-06-20 03:02:27,104   INFO  set_cfgs         None
2022-06-20 03:02:27,104   INFO  max_waiting_mins 0
2022-06-20 03:02:27,104   INFO  start_epoch      0
2022-06-20 03:02:27,104   INFO  num_epochs_to_eval 0
2022-06-20 03:02:27,105   INFO  save_to_file     False
2022-06-20 03:02:27,105   INFO  runs_on          server
2022-06-20 03:02:27,105   INFO  cfg.ROOT_DIR: /home/cstaubmann/Documents/TUGraz/Bachelor Thesis/OpenPCDet
2022-06-20 03:02:27,105   INFO  cfg.LOCAL_RANK: 0
2022-06-20 03:02:27,105   INFO  cfg.CLASS_NAMES: ['Car', 'Bus', 'Truck', 'Pedestrian', 'Cyclist']
2022-06-20 03:02:27,105   INFO  
cfg.DATA_CONFIG = edict()
2022-06-20 03:02:27,105   INFO  cfg.DATA_CONFIG.DATASET: ONCEDataset
2022-06-20 03:02:27,105   INFO  cfg.DATA_CONFIG.DATA_PATH: ../data/once
2022-06-20 03:02:27,105   INFO  cfg.DATA_CONFIG.CLOUD_DATA_PATH: /cache/once
2022-06-20 03:02:27,105   INFO  cfg.DATA_CONFIG.POINT_CLOUD_RANGE: [-75.2, -75.2, -5.0, 75.2, 75.2, 3.0]
2022-06-20 03:02:27,105   INFO  
cfg.DATA_CONFIG.INFO_PATH = edict()
2022-06-20 03:02:27,105   INFO  cfg.DATA_CONFIG.INFO_PATH.train: ['once_infos_train.pkl']
2022-06-20 03:02:27,105   INFO  cfg.DATA_CONFIG.INFO_PATH.val: ['once_infos_val.pkl']
2022-06-20 03:02:27,105   INFO  cfg.DATA_CONFIG.INFO_PATH.test: ['once_infos_test.pkl']
2022-06-20 03:02:27,105   INFO  
cfg.DATA_CONFIG.DATA_SPLIT = edict()
2022-06-20 03:02:27,105   INFO  cfg.DATA_CONFIG.DATA_SPLIT.train: train
2022-06-20 03:02:27,105   INFO  cfg.DATA_CONFIG.DATA_SPLIT.test: val
2022-06-20 03:02:27,105   INFO  
cfg.DATA_CONFIG.DATA_AUGMENTOR = edict()
2022-06-20 03:02:27,105   INFO  cfg.DATA_CONFIG.DATA_AUGMENTOR.DISABLE_AUG_LIST: ['placeholder']
2022-06-20 03:02:27,105   INFO  cfg.DATA_CONFIG.DATA_AUGMENTOR.AUG_CONFIG_LIST: [{'NAME': 'gt_sampling', 'USE_ROAD_PLANE': False, 'DB_INFO_PATH': ['once_dbinfos_train.pkl'], 'PREPARE': {'filter_by_min_points': ['Car:5', 'Bus:5', 'Truck:5', 'Pedestrian:5', 'Cyclist:5']}, 'SAMPLE_GROUPS': ['Car:1', 'Bus:4', 'Truck:3', 'Pedestrian:2', 'Cyclist:2'], 'NUM_POINT_FEATURES': 4, 'REMOVE_EXTRA_WIDTH': [0.0, 0.0, 0.0], 'LIMIT_WHOLE_SCENE': True}, {'NAME': 'random_world_flip', 'ALONG_AXIS_LIST': ['x', 'y']}, {'NAME': 'random_world_rotation', 'WORLD_ROT_ANGLE': [-0.78539816, 0.78539816]}, {'NAME': 'random_world_scaling', 'WORLD_SCALE_RANGE': [0.95, 1.05]}]
2022-06-20 03:02:27,105   INFO  
cfg.DATA_CONFIG.POINT_FEATURE_ENCODING = edict()
2022-06-20 03:02:27,105   INFO  cfg.DATA_CONFIG.POINT_FEATURE_ENCODING.encoding_type: absolute_coordinates_encoding
2022-06-20 03:02:27,105   INFO  cfg.DATA_CONFIG.POINT_FEATURE_ENCODING.used_feature_list: ['x', 'y', 'z', 'intensity']
2022-06-20 03:02:27,105   INFO  cfg.DATA_CONFIG.POINT_FEATURE_ENCODING.src_feature_list: ['x', 'y', 'z', 'intensity']
2022-06-20 03:02:27,105   INFO  cfg.DATA_CONFIG.DATA_PROCESSOR: [{'NAME': 'transform_points_to_voxels', 'VOXEL_SIZE': [0.2, 0.2, 8], 'MAX_POINTS_PER_VOXEL': 16, 'MAX_NUMBER_OF_VOXELS': {'train': 60000, 'test': 60000}}]
2022-06-20 03:02:27,105   INFO  cfg.DATA_CONFIG._BASE_CONFIG_: cfgs/dataset_configs/once_dataset.yaml
2022-06-20 03:02:27,106   INFO  
cfg.MODEL = edict()
2022-06-20 03:02:27,106   INFO  cfg.MODEL.NAME: PointPillar
2022-06-20 03:02:27,106   INFO  
cfg.MODEL.VFE = edict()
2022-06-20 03:02:27,106   INFO  cfg.MODEL.VFE.NAME: PillarVFE
2022-06-20 03:02:27,106   INFO  cfg.MODEL.VFE.WITH_DISTANCE: False
2022-06-20 03:02:27,106   INFO  cfg.MODEL.VFE.USE_ABSLOTE_XYZ: True
2022-06-20 03:02:27,106   INFO  cfg.MODEL.VFE.USE_NORM: True
2022-06-20 03:02:27,106   INFO  cfg.MODEL.VFE.NUM_FILTERS: [64]
2022-06-20 03:02:27,106   INFO  
cfg.MODEL.MAP_TO_BEV = edict()
2022-06-20 03:02:27,106   INFO  cfg.MODEL.MAP_TO_BEV.NAME: PointPillarScatter
2022-06-20 03:02:27,106   INFO  cfg.MODEL.MAP_TO_BEV.NUM_BEV_FEATURES: 64
2022-06-20 03:02:27,106   INFO  
cfg.MODEL.BACKBONE_2D = edict()
2022-06-20 03:02:27,106   INFO  cfg.MODEL.BACKBONE_2D.NAME: BaseBEVBackbone
2022-06-20 03:02:27,106   INFO  cfg.MODEL.BACKBONE_2D.LAYER_NUMS: [3, 5, 5]
2022-06-20 03:02:27,106   INFO  cfg.MODEL.BACKBONE_2D.LAYER_STRIDES: [2, 2, 2]
2022-06-20 03:02:27,106   INFO  cfg.MODEL.BACKBONE_2D.NUM_FILTERS: [64, 128, 256]
2022-06-20 03:02:27,106   INFO  cfg.MODEL.BACKBONE_2D.UPSAMPLE_STRIDES: [1, 2, 4]
2022-06-20 03:02:27,106   INFO  cfg.MODEL.BACKBONE_2D.NUM_UPSAMPLE_FILTERS: [128, 128, 128]
2022-06-20 03:02:27,106   INFO  
cfg.MODEL.DENSE_HEAD = edict()
2022-06-20 03:02:27,106   INFO  cfg.MODEL.DENSE_HEAD.NAME: AnchorHeadSingle
2022-06-20 03:02:27,106   INFO  cfg.MODEL.DENSE_HEAD.CLASS_AGNOSTIC: False
2022-06-20 03:02:27,106   INFO  cfg.MODEL.DENSE_HEAD.USE_DIRECTION_CLASSIFIER: True
2022-06-20 03:02:27,106   INFO  cfg.MODEL.DENSE_HEAD.DIR_OFFSET: 0.78539
2022-06-20 03:02:27,106   INFO  cfg.MODEL.DENSE_HEAD.DIR_LIMIT_OFFSET: 0.0
2022-06-20 03:02:27,106   INFO  cfg.MODEL.DENSE_HEAD.NUM_DIR_BINS: 2
2022-06-20 03:02:27,106   INFO  cfg.MODEL.DENSE_HEAD.ANCHOR_GENERATOR_CONFIG: [{'class_name': 'Car', 'anchor_sizes': [[4.38, 1.87, 1.59]], 'anchor_rotations': [0, 1.57], 'anchor_bottom_heights': [-1.71], 'align_center': False, 'feature_map_stride': 2, 'matched_threshold': 0.6, 'unmatched_threshold': 0.45}, {'class_name': 'Bus', 'anchor_sizes': [[11.11, 2.88, 3.41]], 'anchor_rotations': [0, 1.57], 'anchor_bottom_heights': [-1.74], 'align_center': False, 'feature_map_stride': 2, 'matched_threshold': 0.55, 'unmatched_threshold': 0.4}, {'class_name': 'Truck', 'anchor_sizes': [[7.52, 2.5, 2.62]], 'anchor_rotations': [0, 1.57], 'anchor_bottom_heights': [-1.55], 'align_center': False, 'feature_map_stride': 2, 'matched_threshold': 0.55, 'unmatched_threshold': 0.4}, {'class_name': 'Pedestrian', 'anchor_sizes': [[0.75, 0.76, 1.69]], 'anchor_rotations': [0, 1.57], 'anchor_bottom_heights': [-1.62], 'align_center': False, 'feature_map_stride': 2, 'matched_threshold': 0.3, 'unmatched_threshold': 0.15}, {'class_name': 'Cyclist', 'anchor_sizes': [[2.18, 0.79, 1.43]], 'anchor_rotations': [0, 1.57], 'anchor_bottom_heights': [-1.65], 'align_center': False, 'feature_map_stride': 2, 'matched_threshold': 0.5, 'unmatched_threshold': 0.35}]
2022-06-20 03:02:27,107   INFO  
cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG = edict()
2022-06-20 03:02:27,107   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.NAME: AxisAlignedTargetAssigner
2022-06-20 03:02:27,107   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.POS_FRACTION: -1.0
2022-06-20 03:02:27,107   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.SAMPLE_SIZE: 512
2022-06-20 03:02:27,107   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.NORM_BY_NUM_EXAMPLES: False
2022-06-20 03:02:27,107   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.MATCH_HEIGHT: False
2022-06-20 03:02:27,107   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.BOX_CODER: ResidualCoder
2022-06-20 03:02:27,107   INFO  
cfg.MODEL.DENSE_HEAD.LOSS_CONFIG = edict()
2022-06-20 03:02:27,107   INFO  
cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS = edict()
2022-06-20 03:02:27,107   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.cls_weight: 1.0
2022-06-20 03:02:27,107   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.loc_weight: 2.0
2022-06-20 03:02:27,107   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.dir_weight: 0.2
2022-06-20 03:02:27,107   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.code_weights: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]
2022-06-20 03:02:27,107   INFO  
cfg.MODEL.POST_PROCESSING = edict()
2022-06-20 03:02:27,107   INFO  cfg.MODEL.POST_PROCESSING.RECALL_THRESH_LIST: [0.3, 0.5, 0.7]
2022-06-20 03:02:27,107   INFO  cfg.MODEL.POST_PROCESSING.SCORE_THRESH: 0.1
2022-06-20 03:02:27,107   INFO  cfg.MODEL.POST_PROCESSING.OUTPUT_RAW_SCORE: False
2022-06-20 03:02:27,107   INFO  cfg.MODEL.POST_PROCESSING.EVAL_METRIC: once
2022-06-20 03:02:27,107   INFO  
cfg.MODEL.POST_PROCESSING.NMS_CONFIG = edict()
2022-06-20 03:02:27,107   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.MULTI_CLASSES_NMS: False
2022-06-20 03:02:27,107   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_TYPE: nms_gpu
2022-06-20 03:02:27,107   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_THRESH: 0.01
2022-06-20 03:02:27,107   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_PRE_MAXSIZE: 4096
2022-06-20 03:02:27,107   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_POST_MAXSIZE: 500
2022-06-20 03:02:27,107   INFO  
cfg.OPTIMIZATION = edict()
2022-06-20 03:02:27,107   INFO  cfg.OPTIMIZATION.BATCH_SIZE_PER_GPU: 4
2022-06-20 03:02:27,107   INFO  cfg.OPTIMIZATION.NUM_EPOCHS: 80
2022-06-20 03:02:27,108   INFO  cfg.OPTIMIZATION.OPTIMIZER: adam_onecycle
2022-06-20 03:02:27,108   INFO  cfg.OPTIMIZATION.LR: 0.003
2022-06-20 03:02:27,108   INFO  cfg.OPTIMIZATION.WEIGHT_DECAY: 0.01
2022-06-20 03:02:27,108   INFO  cfg.OPTIMIZATION.MOMENTUM: 0.9
2022-06-20 03:02:27,108   INFO  cfg.OPTIMIZATION.MOMS: [0.95, 0.85]
2022-06-20 03:02:27,108   INFO  cfg.OPTIMIZATION.PCT_START: 0.4
2022-06-20 03:02:27,108   INFO  cfg.OPTIMIZATION.DIV_FACTOR: 10
2022-06-20 03:02:27,108   INFO  cfg.OPTIMIZATION.DECAY_STEP_LIST: [35, 45]
2022-06-20 03:02:27,108   INFO  cfg.OPTIMIZATION.LR_DECAY: 0.1
2022-06-20 03:02:27,108   INFO  cfg.OPTIMIZATION.LR_CLIP: 1e-07
2022-06-20 03:02:27,108   INFO  cfg.OPTIMIZATION.LR_WARMUP: False
2022-06-20 03:02:27,108   INFO  cfg.OPTIMIZATION.WARMUP_EPOCH: 1
2022-06-20 03:02:27,108   INFO  cfg.OPTIMIZATION.GRAD_NORM_CLIP: 10
2022-06-20 03:02:27,108   INFO  cfg.TAG: pointpillar
2022-06-20 03:02:27,108   INFO  cfg.EXP_GROUP_PATH: cfgs/once_models/sup_models
2022-06-20 03:02:27,765   INFO  Database filter by min points Car: 98140 => 97612
2022-06-20 03:02:27,766   INFO  Database filter by min points Bus: 2263 => 2263
2022-06-20 03:02:27,767   INFO  Database filter by min points Truck: 5048 => 5046
2022-06-20 03:02:27,768   INFO  Database filter by min points Pedestrian: 14320 => 14128
2022-06-20 03:02:27,772   INFO  Database filter by min points Cyclist: 31386 => 31121
2022-06-20 03:02:27,774   INFO  Loading ONCE dataset
2022-06-20 03:02:28,319   INFO  Total samples for ONCE dataset: 4961
2022-06-20 03:02:30,176   INFO  ==> Loading parameters from checkpoint ../output/cfgs/once_models/sup_models/pointpillar/default/ckpt/checkpoint_epoch_46.pth to GPU
2022-06-20 03:02:30,209   INFO  ==> Checkpoint trained from version: pcdet+0.5.2+846cf3e+pya764bf9
2022-06-20 03:02:30,213   INFO  ==> Done (loaded 127/127)
2022-06-20 03:02:30,214   INFO  ==> Loading parameters from checkpoint /home/cstaubmann/Documents/TUGraz/Bachelor Thesis/OpenPCDet/output/cfgs/once_models/sup_models/pointpillar/default/ckpt/checkpoint_epoch_46.pth to GPU
2022-06-20 03:02:30,249   INFO  ==> Loading optimizer parameters from checkpoint /home/cstaubmann/Documents/TUGraz/Bachelor Thesis/OpenPCDet/output/cfgs/once_models/sup_models/pointpillar/default/ckpt/checkpoint_epoch_46.pth to GPU
2022-06-20 03:02:30,257   INFO  ==> Done
2022-06-20 03:02:30,257   INFO  PointPillar(
  (vfe): PillarVFE(
    (pfn_layers): ModuleList(
      (0): PFNLayer(
        (linear): Linear(in_features=10, out_features=64, bias=False)
        (norm): BatchNorm1d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
      )
    )
  )
  (backbone_3d): None
  (map_to_bev_module): PointPillarScatter()
  (pfe): None
  (backbone_2d): BaseBEVBackbone(
    (blocks): ModuleList(
      (0): Sequential(
        (0): ZeroPad2d(padding=(1, 1, 1, 1), value=0.0)
        (1): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2), bias=False)
        (2): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (3): ReLU()
        (4): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (5): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (6): ReLU()
        (7): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (8): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (9): ReLU()
        (10): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (11): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (12): ReLU()
      )
      (1): Sequential(
        (0): ZeroPad2d(padding=(1, 1, 1, 1), value=0.0)
        (1): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), bias=False)
        (2): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (3): ReLU()
        (4): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (5): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (6): ReLU()
        (7): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (8): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (9): ReLU()
        (10): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (11): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (12): ReLU()
        (13): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (14): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (15): ReLU()
        (16): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (17): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (18): ReLU()
      )
      (2): Sequential(
        (0): ZeroPad2d(padding=(1, 1, 1, 1), value=0.0)
        (1): Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), bias=False)
        (2): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (3): ReLU()
        (4): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (5): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (6): ReLU()
        (7): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (8): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (9): ReLU()
        (10): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (11): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (12): ReLU()
        (13): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (14): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (15): ReLU()
        (16): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (17): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (18): ReLU()
      )
    )
    (deblocks): ModuleList(
      (0): Sequential(
        (0): ConvTranspose2d(64, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (2): ReLU()
      )
      (1): Sequential(
        (0): ConvTranspose2d(128, 128, kernel_size=(2, 2), stride=(2, 2), bias=False)
        (1): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (2): ReLU()
      )
      (2): Sequential(
        (0): ConvTranspose2d(256, 128, kernel_size=(4, 4), stride=(4, 4), bias=False)
        (1): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (2): ReLU()
      )
    )
  )
  (dense_head): AnchorHeadSingle(
    (cls_loss_func): SigmoidFocalClassificationLoss()
    (reg_loss_func): WeightedSmoothL1Loss()
    (dir_loss_func): WeightedCrossEntropyLoss()
    (conv_cls): Conv2d(384, 50, kernel_size=(1, 1), stride=(1, 1))
    (conv_box): Conv2d(384, 70, kernel_size=(1, 1), stride=(1, 1))
    (conv_dir_cls): Conv2d(384, 20, kernel_size=(1, 1), stride=(1, 1))
  )
  (point_head): None
  (roi_head): None
)
2022-06-20 03:02:30,258   INFO  **********************Start training cfgs/once_models/sup_models/pointpillar(default)**********************
2022-06-20 14:59:39,078   INFO  **********************End training cfgs/once_models/sup_models/pointpillar(default)**********************



2022-06-20 14:59:39,080   INFO  **********************Start evaluation cfgs/once_models/sup_models/pointpillar(default)**********************
2022-06-20 14:59:39,085   INFO  Loading ONCE dataset
2022-06-20 14:59:39,863   INFO  Total samples for ONCE dataset: 3321
2022-06-20 14:59:39,892   INFO  ==> Loading parameters from checkpoint /home/cstaubmann/Documents/TUGraz/Bachelor Thesis/OpenPCDet/output/cfgs/once_models/sup_models/pointpillar/default/ckpt/checkpoint_epoch_80.pth to GPU
2022-06-20 14:59:39,936   INFO  ==> Checkpoint trained from version: pcdet+0.5.2+846cf3e+pya764bf9
2022-06-20 14:59:39,942   INFO  ==> Done (loaded 127/127)
2022-06-20 14:59:39,945   INFO  *************** EPOCH 80 EVALUATION *****************
2022-06-20 15:02:23,040   INFO  *************** Performance of EPOCH 80 *****************
2022-06-20 15:02:23,040   INFO  Generate label finished(sec_per_example: 0.0491 second).
2022-06-20 15:02:23,040   INFO  recall_roi_0.3: 0.000000
2022-06-20 15:02:23,040   INFO  recall_rcnn_0.3: 0.884570
2022-06-20 15:02:23,040   INFO  recall_roi_0.5: 0.000000
2022-06-20 15:02:23,040   INFO  recall_rcnn_0.5: 0.792304
2022-06-20 15:02:23,040   INFO  recall_roi_0.7: 0.000000
2022-06-20 15:02:23,040   INFO  recall_rcnn_0.7: 0.522599
2022-06-20 15:02:23,042   INFO  Average predicted number of objects(3321 samples): 51.773
2022-06-20 15:02:49,423   INFO  
|AP@50       |overall     |0-30m       |30-50m      |50m-inf     |
|Vehicle     |69.21       |82.14       |61.68       |43.11       |
|Pedestrian  |17.34       |19.22       |14.79       |12.72       |
|Cyclist     |45.57       |58.36       |38.23       |23.53       |
|mAP         |44.04       |53.24       |38.23       |26.45       |

2022-06-20 15:02:49,423   INFO  Result is save to /home/cstaubmann/Documents/TUGraz/Bachelor Thesis/OpenPCDet/output/cfgs/once_models/sup_models/pointpillar/default/eval/eval_with_train/epoch_80/val
2022-06-20 15:02:49,424   INFO  ****************Evaluation done.*****************
2022-06-20 15:02:49,438   INFO  Epoch 80 has been evaluated
2022-06-20 15:03:19,470   INFO  **********************End evaluation cfgs/once_models/sup_models/pointpillar(default)**********************
